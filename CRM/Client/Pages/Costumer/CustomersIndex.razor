@page "/"
@using CRM.Shared;
@using CRM.Shared.Model;
@using CRM.Client.Components;
@inject HttpClient http;


<PageTitle>CustomersIndex</PageTitle>

@if (customers == null)
{
    <p><em>Loading..</em></p>
}
else
{
    <div style="max-width: 800px;max-height:200px; margin:auto; overflow: auto;">
        <table class="table">
            <thead>
                <tr>

                    <th>Name</th>
                    <th>Phonenumber</th>
                    <th>Servicehours</th>
                    <th>Date Modified</th>
                    <th>Opret task</th>
                    <th>Tank op</th>
                </tr>
            </thead>
            <tbody class="hoverTable">
                @foreach (var customer in customers)
                {
                    <tr @onclick="@(() => OpenModal(customer))">
                        <td>@customer.Name</td>
                        <td>@customer.PhoneNumber</td>
                        <td>@customer.ServiceHours</td>
                        <td>@customer.DateModified</td>
                        <td>
                            <div>
                                <button style="border:thin"><img src="/Createtask.svg" alt="Star SVG" width="25" height="25" /></button>
                            </div>
                        </td>
                        <td>
                            <div>
                                <button style="border: thin"><img src="/Gasicon.svg" alt="Star SVG" width="25" height="25" /></button>
                            </div>

                        </td>



                    </tr>
                    <tr style="border-bottom: 1px solid #ccc;"></tr>

                }
            </tbody>
        </table>
    </div>

}


@code {
    private List<Customer> customers;
    private List<Contact> contacts;
    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    private void OpenModal(Customer customer)
    {
        var customerContacts = new List<Contact>();
        for (int i = 0; i < contacts.Count; i++)
        {
            if (contacts[i].CustomerId == customer.Id)
            {
                customerContacts.Add(contacts[i]);

            }
        }

        var parameters = new ModalParameters()
            .Add(nameof(CustomerInfo.SelectedItem), customer)
            .Add(nameof(CustomerInfo.Contacts), customerContacts);
        var options = new ModalOptions()
            {
                Size = ModalSize.Automatic
            };
        Modal.Show<CustomerInfo>($"Information for {customer.Name}", parameters, options);
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        customers = await http.GetFromJsonAsync<List<Customer>>("api/Customers");
        contacts = await http.GetFromJsonAsync<List<Contact>>("api/Contacts");
    }
}

<style style="text/css">
    /* Source: https://www.textfixer.com/tutorials/highlight-table-row.php*/
    .hoverTable {
        /* width: 100%; */
        border-collapse: collapse;
    }

        /* Define the default color for all the table rows */
        .hoverTable tr {
            background: none;
        }
            /* Define the hover highlight color for the table row */
            .hoverTable tr:hover {
                background-color: lightgray;
            }
</style>
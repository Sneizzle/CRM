@page "/"
@using Microsoft.AspNetCore.Authorization;
@using CRM.Client.Components.Tasks;
@using CRM.Client.Repositories;
@using CRM.Shared;
@using CRM.Shared.Model;
@using CRM.Client.Components.Customer;
@*@using CRM.Client.Components.AddHours;*@
@using System.Reflection
@attribute [Authorize]
@inject HttpClient http;
@{
    var backgroundColor = "#20283a";
    var textColor = "#3260a8";
    var secondaryTextColor = "#cfcccc";
    var accentColor = "#bd3535";
    var hoverColor = "#454a53";
    var grayColor = "@#453f3f";
    var fontSizeHeader = "larger";
    var fontSieName = "large";
    var tableDataFontSize = "medium";
}
<body style="background-color: #20283a; overflow-y: hidden;">
    <div class="main-container">
        <div style="overflow-y: hidden; max-width: 80vw; height: 100%; margin: auto; position: relative; zoom: ">
            <AuthorizeView>
                <Authorized>




                    <PageTitle>CustomersIndex</PageTitle>

                    @if (CusRepo.customers == null)
                    {
                        <p><em>Loading..</em></p>
                    }
                    else
                    {

                        /*adjust the vh for table*/

                        <div style="max-width: 80vw; max-height: 75vh; margin: auto; overflow: hidden; position: relative; zoom: ">
                            <div style="max-width: 500px; ">
                                <input class="form-control" type="text" style="height: 60px" placeholder="Search up a customer.."
                                @bind="Filter"
                                @bind:event="oninput">
                            </div>
                            <div style="display: flex; justify-content: right; cursor: pointer">
                                <a @onclick="@(() => CreateCustomerModal())" style="font-weight: bolder; color:darkorange;">
                                    <img src="/css/Logos/CreateCustomer.svg" alt="Opret Kunde" width="60" height="65" ; />Opret Kunde
                                </a>




                            </div>
                            <div style="overflow-y: auto; max-height: calc(100vh - 100px); position: relative;">
                                <div class="table-container">
                                    <table class="table" style="border-collapse: collapse; width: 100%; max-width: 100%; max-height: 70vh">
                                        <thead>
                                            <tr>
                                                <th style="color: @textColor; cursor: pointer; font-size: @fontSizeHeader">

                                                    <href style="font-weight: bolder;" @onclick="SortByName">
                                                        Navn
                                                        @if (sortAscendingName == false)
                                                        {
                                                            <img src="Arrowdown.svg" alt="Star SVG" width="15" height="15" />
                                                        }
                                                        else
                                                        {
                                                            <img src="Arrowup.svg" alt="Star SVG" width="15" height="15" />
                                                        }
                                                    </href>


                                                </th>
                                                <th style="font-weight: bolder; color: @textColor; font-size: @fontSizeHeader">Telefonnr</th>
                                                <th style="font-weight: bolder; color: @textColor; font-size: @fontSizeHeader; cursor: pointer" @onclick="SortByServiceHours">
                                                    Service timer
                                                    @if (sortAscendingHours == false)
                                                    {
                                                        <img src="Arrowdown.svg" alt="Star SVG" width="15" height="15" />
                                                    }
                                                    else
                                                    {
                                                        <img src="Arrowup.svg" alt="Star SVG" width="15" height="15" />

                                                    }

                                                </th>
                                                <th style="font-weight: bolder; cursor: pointer; color: @textColor; font-size: @fontSizeHeader" @onclick="SortByDateModified">
                                                    Dato for optankning
                                                    @if (sortAscending == false)
                                                    {
                                                        <img src="Arrowdown.svg" alt="Star SVG" width="15" height="15" />
                                                    }
                                                    else
                                                    {
                                                        <img src="Arrowup.svg" alt="Star SVG" width="15" height="15" />
                                                    }
                                                </th>
                                                <th style="color: @textColor; font-size: @fontSizeHeader">Opret task</th>
                                                <th style="color: @textColor; font-size: @fontSizeHeader">Tank op</th>
                                            </tr>
                                        </thead>
                                        <tbody class="hoverTable" style="max-height: calc(100vh - 160px); overflow-y: auto;">
                                            @foreach (var customer in CusRepo.customers)
                                            {
                                                if (customer.IsHidden == false)
                                                {
                                                    if (!IsVisible(customer))
                                                        continue;
                                                    <tr @onclick="@(() => OpenCustomerInfoModal(customer))">
                                                        <td style="font-weight: bolder; font-size: @fontSieName; color: @accentColor">@customer.Name</td>
                                                        <td style="color: @secondaryTextColor; font-size: @tableDataFontSize">@customer.PhoneNumber</td>
                                                        <td style="color: @secondaryTextColor; font-size: @tableDataFontSize">@customer.ServiceHours</td>
                                                        <td style="color: @secondaryTextColor; font-size: @tableDataFontSize">@customer.DateModified</td>
                                                        <td style="text-align: center;">
                                                            <div @onclick:stopPropagation="true" @onclick:preventDefault="true" style="margin: auto; cursor: pointer">
                                                                <a style="border: thin; z-index: 50" @onclick="(() => AddTasks(customer))"><img src="/CreateTaskColored.svg" alt="Star SVG" width="50" height="50" /></a>
                                                            </div>
                                                        </td>
                                                        <td style="text-align: center;">
                                                            <div @onclick:stopPropagation="true" @onclick:preventDefault="true" style="margin: auto; cursor: pointer">
                                                                <a position: absolute @onclick="@(() => OpenRefuel(customer))" style="border: thin; z-index: 100;"><img src="/GasIconColored.svg" alt="Star SVG" width="50" height="50" /></a>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <tr style="border-bottom: 1px solid #232d3c;"></tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                    }
                </Authorized>
            </AuthorizeView>
        </div>
    </div>
</body>

@code {
    [CascadingParameter] public IModalService Modal { get; set; } = default!;
    public string Filter { get; set; }
    private bool sortAscending = true;
    private bool sortAscendingName = true;
    private bool sortAscendingHours = true;

    CustomerRepo CusRepo = CustomerRepo.Instance;
    ContactsRepo ConRepo = ContactsRepo.Instance;

    private async void OpenRefuel(Customer customer)
    {
        var parameters = new ModalParameters().
        Add(nameof(AddHours.SelectedItem), customer);
        var options = new ModalOptions()
            {
                Size = ModalSize.Medium
            };
        var refuelResult = Modal.Show<AddHours>($"Tank op for: {customer.Name}", parameters, options);

        var result = await refuelResult.Result;
        if (!result.Cancelled)
        {
            StateHasChanged();
        }
    }


    private async void OpenCustomerInfoModal(Customer customer)
    {
        var parameters = new ModalParameters()
            .Add(nameof(CustomerInfo.SelectedItem), customer);
        var options = new ModalOptions()
            {
                Size = ModalSize.ExtraLarge,
                DisableBackgroundCancel = true

            };
        var customerResult = Modal.Show<CustomerInfo>($"Information for: {customer.Name}", parameters, options);
        var result = await customerResult.Result;
        if (!result.Cancelled)
        {
            StateHasChanged();
        }
    }

    private async void CreateCustomerModal()
    {
        var options = new ModalOptions()
            {
                Size = ModalSize.Automatic
            };
        var customerResult = Modal.Show<CreateCustomer>("Opret Kunde");
        var result = await customerResult.Result;
        if (!result.Cancelled)
        {
            //Customer tmpCustomer = (Customer)result.Data;
            await CusRepo.InitializeCustomers();
            Console.WriteLine("result.confirmed :)");
            StateHasChanged();
        }
        else
        {
            Console.WriteLine("result.Ikkeconfirmed :(");
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await CusRepo.InitializeCustomers();
        await ConRepo.InitializeContacts();
        StateHasChanged();
    }

    private void SortByName()
    {
        sortAscendingName = !sortAscendingName; //Sætter til false onClick // intially true.
        sortAscendingHours = true;
        sortAscending = true;
        if (sortAscendingName == true)
        {
            CusRepo.customers = CusRepo.customers.OrderByDescending(c => c.Name).ToList();
        }
        else
        {
            CusRepo.customers = CusRepo.customers.OrderBy(c => c.Name).ToList();
        }
    }
    private void SortByDateModified()
    {
        sortAscending = !sortAscending;
        sortAscendingHours = true; // hvis vi ikke resetter, bliver der ikke ønsket adfærd
        sortAscendingName = true;
        if (sortAscending == true)
        {
            CusRepo.customers = CusRepo.customers.OrderByDescending(c => c.DateModified).ToList();
        }
        else
        {
            CusRepo.customers = CusRepo.customers.OrderBy(c => c.DateModified).ToList();
            //customers => customers.DateModified is < DateTime.
        }
    }

    private void SortByServiceHours()
    {
        sortAscending = true;
        sortAscendingName = true;
        sortAscendingHours = !sortAscendingHours;
        if (sortAscendingHours == true)
        {
            CusRepo.customers = CusRepo.customers.OrderByDescending(c => c.ServiceHours).ToList();
        }
        else
        {
            CusRepo.customers = CusRepo.customers.OrderBy(c => c.ServiceHours).ToList();
        }

    }
    public bool IsVisible(Customer customer)
    {
        return string.IsNullOrEmpty(Filter) || customer.Name.Contains(Filter, StringComparison.OrdinalIgnoreCase);
    }

    private async void AddTasks(Customer customer)
    {
        var parameters = new ModalParameters().
        Add(nameof(AddTask.SelectedItem), customer);
        var options = new ModalOptions()
            {
                Size = ModalSize.Medium
            };
        var customerResult = Modal.Show<AddTask>($"Opret Task for: {customer.Name}", parameters, options);

        var result = await customerResult.Result;
        if (!result.Cancelled)
        {
            StateHasChanged();
        }

    }
}


<style style="text/css">
    /* Source: https://www.textfixer.com/tutorials/highlight-table-row.php */
    .hoverTable {
        border-collapse: collapse;
    }

        .hoverTable tr {
            background: #323c50;
        }

            .hoverTable tr:hover {
                background-color: @hoverColor;
            }
</style>
<style>
    #myInput {
        background-image: url('/css/searchicon.png'); /* Add a search icon to input */
        background-position: 10px 12px; /* Position the search icon */
        background-repeat: no-repeat; /* Do not repeat the icon image */
        width: 250px; /* Full-width */
        font-size: 16px; /* Increase font-size */
        padding: 12px 20px 12px 40px; /* Add some padding */
        border: 5px solid #ddd; /* Add a grey border */
        margin-bottom: 12px; /* Add some space below the input */
    }
</style>

<style>

    .table thead th {
        position: sticky;
        top: 0;
        background-color: #323c50;
    }


    .hoverTable tr {
        background: #323c50;
    }

        .hoverTable tr:hover {
            background-color: @hoverColor;
        }
</style>
<style>
    body, html {
        margin: 0;
        padding: 0;
        overflow-y: hidden;
        height: 100%;
        background: #20283a;
    }


    .main-container {
        max-width: 80vw;
        margin: auto;
        overflow: hidden;
        position: relative;
        zoom: 1;
        background-color: #20283a;
    }

    .table-container {
        overflow-y: auto;
        position: relative;
</style>

<style>
    .table-container {
        position: relative;
        overflow-y: auto;
        max-height: calc(100vh - 160px); /* Adjust the max-height if needed */
    }

    .table thead th {
        position: sticky;
        top: 0;
        background-color: #323c50;
        z-index: 2; /* Adjust the z-index as needed */
    }

    .hoverTable tr {
        background: #323c50;
    }

        .hoverTable tr:hover {
            background-color: @hoverColor;
        }
</style>